" https://github.com/tpope/vim-pathogen
execute pathogen#infect()

" rames
"echom "(>^.^<)"
set nocompatible
syntax on
let maplocalleader=","
let mapleader = ","
let localleader = ","
filetype on
filetype plugin on
filetype indent on
nmap <tab> <c-]>
set hls
set expandtab
set ts=4 sw=4
filetype indent plugin on
hi MatchParen cterm=none ctermbg=black ctermfg=red

" advanced vimtip 102
inoremap <silent> <Tab> <C-r>=<SID>InsertTabWrapper(1)<CR>
inoremap <silent> <S-Tab> <C-r>=<SID>InsertTabWrapper(-1)<CR>
function! <SID>InsertTabWrapper(direction)
  let idx = col('.') - 1
  let str = getline('.')
  if a:direction > 0 && idx >= 2 && str[idx - 1] == ' '
        \&& str[idx - 2] =~? '[a-z]'
    if &softtabstop && idx % &softtabstop == 0
      return "\<BS>\<Tab>\<Tab>"
    else
      return "\<BS>\<Tab>"
    endif
  elseif idx == 0 || str[idx - 1] !~? '[a-z]'
    return "\<Tab>"
  elseif a:direction > 0
    return "\<C-p>"
  else
    return "\<C-n>"
  endif
endfunction



set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 0
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
"let g:syntastic_quiet_messages = {
"\    "!level":  ["errors"],
"\    "type":    ["style"],
"\    "regex":   ['\m\[C03\d\d\]'],
"\    "file:p":  ['\m^/usr/include/', '\m\c\.h$']
"\}
let g:syntastic_quiet_messages = { "!level":  ["errors"] }
